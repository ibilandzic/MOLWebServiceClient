//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microline.WS.Connector.Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://microline.hr/WebServices", ConfigurationName="Service.MOLSoap")]
    public interface MOLSoap {
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemData", ReplyAction="*")]
        Microline.WS.Connector.Service.itemDataResponse itemData(Microline.WS.Connector.Service.itemDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemData", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemDataResponse> itemDataAsync(Microline.WS.Connector.Service.itemDataRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemList", ReplyAction="*")]
        Microline.WS.Connector.Service.itemListResponse itemList(Microline.WS.Connector.Service.itemListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemList", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListResponse> itemListAsync(Microline.WS.Connector.Service.itemListRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemListFiltered", ReplyAction="*")]
        Microline.WS.Connector.Service.itemListFilteredResponse itemListFiltered(Microline.WS.Connector.Service.itemListFilteredRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemListFiltered", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListFilteredResponse> itemListFilteredAsync(Microline.WS.Connector.Service.itemListFilteredRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemListAndData", ReplyAction="*")]
        Microline.WS.Connector.Service.itemListAndDataResponse itemListAndData(Microline.WS.Connector.Service.itemListAndDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemListAndData", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListAndDataResponse> itemListAndDataAsync(Microline.WS.Connector.Service.itemListAndDataRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/arTermsList", ReplyAction="*")]
        Microline.WS.Connector.Service.arTermsListResponse arTermsList(Microline.WS.Connector.Service.arTermsListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/arTermsList", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.arTermsListResponse> arTermsListAsync(Microline.WS.Connector.Service.arTermsListRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemTypeList", ReplyAction="*")]
        Microline.WS.Connector.Service.itemTypeListResponse itemTypeList(Microline.WS.Connector.Service.itemTypeListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemTypeList", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemTypeListResponse> itemTypeListAsync(Microline.WS.Connector.Service.itemTypeListRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemSubTypeList", ReplyAction="*")]
        Microline.WS.Connector.Service.itemSubTypeListResponse itemSubTypeList(Microline.WS.Connector.Service.itemSubTypeListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/itemSubTypeList", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemSubTypeListResponse> itemSubTypeListAsync(Microline.WS.Connector.Service.itemSubTypeListRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/tradeMarkList", ReplyAction="*")]
        Microline.WS.Connector.Service.tradeMarkListResponse tradeMarkList(Microline.WS.Connector.Service.tradeMarkListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/tradeMarkList", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.tradeMarkListResponse> tradeMarkListAsync(Microline.WS.Connector.Service.tradeMarkListRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/priceList", ReplyAction="*")]
        Microline.WS.Connector.Service.priceListResponse priceList(Microline.WS.Connector.Service.priceListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/priceList", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.priceListResponse> priceListAsync(Microline.WS.Connector.Service.priceListRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/priceListForSCEndUser", ReplyAction="*")]
        Microline.WS.Connector.Service.priceListForSCEndUserResponse priceListForSCEndUser(Microline.WS.Connector.Service.priceListForSCEndUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/priceListForSCEndUser", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.priceListForSCEndUserResponse> priceListForSCEndUserAsync(Microline.WS.Connector.Service.priceListForSCEndUserRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/customerStatement", ReplyAction="*")]
        Microline.WS.Connector.Service.customerStatementResponse customerStatement(Microline.WS.Connector.Service.customerStatementRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/customerStatement", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.customerStatementResponse> customerStatementAsync(Microline.WS.Connector.Service.customerStatementRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/salesInvoices", ReplyAction="*")]
        Microline.WS.Connector.Service.salesInvoicesResponse salesInvoices(Microline.WS.Connector.Service.salesInvoicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/salesInvoices", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesInvoicesResponse> salesInvoicesAsync(Microline.WS.Connector.Service.salesInvoicesRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/serialNumbersInSalesInvoice", ReplyAction="*")]
        Microline.WS.Connector.Service.serialNumbersInSalesInvoiceResponse serialNumbersInSalesInvoice(Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/serialNumbersInSalesInvoice", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.serialNumbersInSalesInvoiceResponse> serialNumbersInSalesInvoiceAsync(Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/salesInvoiceSysdocidForNumber", ReplyAction="*")]
        Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberResponse salesInvoiceSysdocidForNumber(Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/salesInvoiceSysdocidForNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberResponse> salesInvoiceSysdocidForNumberAsync(Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/postTemporarySO", ReplyAction="*")]
        Microline.WS.Connector.Service.postTemporarySOResponse postTemporarySO(Microline.WS.Connector.Service.postTemporarySORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/postTemporarySO", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.postTemporarySOResponse> postTemporarySOAsync(Microline.WS.Connector.Service.postTemporarySORequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/addSO", ReplyAction="*")]
        Microline.WS.Connector.Service.addSOResponse addSO(Microline.WS.Connector.Service.addSORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/addSO", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.addSOResponse> addSOAsync(Microline.WS.Connector.Service.addSORequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/deleteSO", ReplyAction="*")]
        Microline.WS.Connector.Service.deleteSOResponse deleteSO(Microline.WS.Connector.Service.deleteSORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/deleteSO", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.deleteSOResponse> deleteSOAsync(Microline.WS.Connector.Service.deleteSORequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/deliverSO", ReplyAction="*")]
        Microline.WS.Connector.Service.deliverSOResponse deliverSO(Microline.WS.Connector.Service.deliverSORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/deliverSO", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.deliverSOResponse> deliverSOAsync(Microline.WS.Connector.Service.deliverSORequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/deletePO", ReplyAction="*")]
        Microline.WS.Connector.Service.deletePOResponse deletePO(Microline.WS.Connector.Service.deletePORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/deletePO", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.deletePOResponse> deletePOAsync(Microline.WS.Connector.Service.deletePORequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/confirmSO", ReplyAction="*")]
        Microline.WS.Connector.Service.confirmSOResponse confirmSO(Microline.WS.Connector.Service.confirmSORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/confirmSO", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.confirmSOResponse> confirmSOAsync(Microline.WS.Connector.Service.confirmSORequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/addItem", ReplyAction="*")]
        Microline.WS.Connector.Service.addItemResponse addItem(Microline.WS.Connector.Service.addItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/addItem", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.addItemResponse> addItemAsync(Microline.WS.Connector.Service.addItemRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/changeItem", ReplyAction="*")]
        Microline.WS.Connector.Service.changeItemResponse changeItem(Microline.WS.Connector.Service.changeItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/changeItem", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.changeItemResponse> changeItemAsync(Microline.WS.Connector.Service.changeItemRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/confirmPO", ReplyAction="*")]
        Microline.WS.Connector.Service.confirmPOResponse confirmPO(Microline.WS.Connector.Service.confirmPORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/confirmPO", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.confirmPOResponse> confirmPOAsync(Microline.WS.Connector.Service.confirmPORequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/addPO", ReplyAction="*")]
        Microline.WS.Connector.Service.addPOResponse addPO(Microline.WS.Connector.Service.addPORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/addPO", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.addPOResponse> addPOAsync(Microline.WS.Connector.Service.addPORequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/locationContent", ReplyAction="*")]
        Microline.WS.Connector.Service.locationContentResponse locationContent(Microline.WS.Connector.Service.locationContentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/locationContent", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.locationContentResponse> locationContentAsync(Microline.WS.Connector.Service.locationContentRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/racks", ReplyAction="*")]
        Microline.WS.Connector.Service.racksResponse racks(Microline.WS.Connector.Service.racksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/racks", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.racksResponse> racksAsync(Microline.WS.Connector.Service.racksRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/salesOrdersLines", ReplyAction="*")]
        Microline.WS.Connector.Service.salesOrdersLinesResponse salesOrdersLines(Microline.WS.Connector.Service.salesOrdersLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/salesOrdersLines", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesOrdersLinesResponse> salesOrdersLinesAsync(Microline.WS.Connector.Service.salesOrdersLinesRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/availability", ReplyAction="*")]
        Microline.WS.Connector.Service.availabilityResponse availability(Microline.WS.Connector.Service.availabilityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/availability", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.availabilityResponse> availabilityAsync(Microline.WS.Connector.Service.availabilityRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/purchaseOrdersLines", ReplyAction="*")]
        Microline.WS.Connector.Service.purchaseOrdersLinesResponse purchaseOrdersLines(Microline.WS.Connector.Service.purchaseOrdersLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/purchaseOrdersLines", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.purchaseOrdersLinesResponse> purchaseOrdersLinesAsync(Microline.WS.Connector.Service.purchaseOrdersLinesRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/salesOrders", ReplyAction="*")]
        Microline.WS.Connector.Service.salesOrdersResponse salesOrders(Microline.WS.Connector.Service.salesOrdersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/salesOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesOrdersResponse> salesOrdersAsync(Microline.WS.Connector.Service.salesOrdersRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/purchaseOrders", ReplyAction="*")]
        Microline.WS.Connector.Service.purchaseOrdersResponse purchaseOrders(Microline.WS.Connector.Service.purchaseOrdersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/purchaseOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.purchaseOrdersResponse> purchaseOrdersAsync(Microline.WS.Connector.Service.purchaseOrdersRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/transaction", ReplyAction="*")]
        Microline.WS.Connector.Service.transactionResponse transaction(Microline.WS.Connector.Service.transactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/transaction", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.transactionResponse> transactionAsync(Microline.WS.Connector.Service.transactionRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/soPK", ReplyAction="*")]
        Microline.WS.Connector.Service.soPKResponse soPK(Microline.WS.Connector.Service.soPKRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/soPK", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.soPKResponse> soPKAsync(Microline.WS.Connector.Service.soPKRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/poPK", ReplyAction="*")]
        Microline.WS.Connector.Service.poPKResponse poPK(Microline.WS.Connector.Service.poPKRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/poPK", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.poPKResponse> poPKAsync(Microline.WS.Connector.Service.poPKRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/soData", ReplyAction="*")]
        Microline.WS.Connector.Service.soDataResponse soData(Microline.WS.Connector.Service.soDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/soData", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.soDataResponse> soDataAsync(Microline.WS.Connector.Service.soDataRequest request);
        
        // CODEGEN: Generating message contract since element name aspServer from namespace http://microline.hr/WebServices is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/findRMA", ReplyAction="*")]
        Microline.WS.Connector.Service.findRMAResponse findRMA(Microline.WS.Connector.Service.findRMARequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://microline.hr/WebServices/findRMA", ReplyAction="*")]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.findRMAResponse> findRMAAsync(Microline.WS.Connector.Service.findRMARequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemData", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemDataRequestBody Body;
        
        public itemDataRequest() {
        }
        
        public itemDataRequest(Microline.WS.Connector.Service.itemDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string itemKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public long quantity;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool extraInfo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string termsKey;
        
        public itemDataRequestBody() {
        }
        
        public itemDataRequestBody(string aspServer, string customerKey, string password, string cookie, string itemKey, long quantity, bool extraInfo, string termsKey) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.itemKey = itemKey;
            this.quantity = quantity;
            this.extraInfo = extraInfo;
            this.termsKey = termsKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemDataResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemDataResponseBody Body;
        
        public itemDataResponse() {
        }
        
        public itemDataResponse(Microline.WS.Connector.Service.itemDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string itemDataResult;
        
        public itemDataResponseBody() {
        }
        
        public itemDataResponseBody(string itemDataResult) {
            this.itemDataResult = itemDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemList", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemListRequestBody Body;
        
        public itemListRequest() {
        }
        
        public itemListRequest(Microline.WS.Connector.Service.itemListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public itemListRequestBody() {
        }
        
        public itemListRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemListResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemListResponseBody Body;
        
        public itemListResponse() {
        }
        
        public itemListResponse(Microline.WS.Connector.Service.itemListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string itemListResult;
        
        public itemListResponseBody() {
        }
        
        public itemListResponseBody(string itemListResult) {
            this.itemListResult = itemListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemListFilteredRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemListFiltered", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemListFilteredRequestBody Body;
        
        public itemListFilteredRequest() {
        }
        
        public itemListFilteredRequest(Microline.WS.Connector.Service.itemListFilteredRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemListFilteredRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string tradeMarkKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string itemTypeKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool extraInfo;
        
        public itemListFilteredRequestBody() {
        }
        
        public itemListFilteredRequestBody(string aspServer, string customerKey, string password, string cookie, string tradeMarkKey, string itemTypeKey, bool extraInfo) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.tradeMarkKey = tradeMarkKey;
            this.itemTypeKey = itemTypeKey;
            this.extraInfo = extraInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemListFilteredResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemListFilteredResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemListFilteredResponseBody Body;
        
        public itemListFilteredResponse() {
        }
        
        public itemListFilteredResponse(Microline.WS.Connector.Service.itemListFilteredResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemListFilteredResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string itemListFilteredResult;
        
        public itemListFilteredResponseBody() {
        }
        
        public itemListFilteredResponseBody(string itemListFilteredResult) {
            this.itemListFilteredResult = itemListFilteredResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemListAndDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemListAndData", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemListAndDataRequestBody Body;
        
        public itemListAndDataRequest() {
        }
        
        public itemListAndDataRequest(Microline.WS.Connector.Service.itemListAndDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemListAndDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public itemListAndDataRequestBody() {
        }
        
        public itemListAndDataRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemListAndDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemListAndDataResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemListAndDataResponseBody Body;
        
        public itemListAndDataResponse() {
        }
        
        public itemListAndDataResponse(Microline.WS.Connector.Service.itemListAndDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemListAndDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string itemListAndDataResult;
        
        public itemListAndDataResponseBody() {
        }
        
        public itemListAndDataResponseBody(string itemListAndDataResult) {
            this.itemListAndDataResult = itemListAndDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class arTermsListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="arTermsList", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.arTermsListRequestBody Body;
        
        public arTermsListRequest() {
        }
        
        public arTermsListRequest(Microline.WS.Connector.Service.arTermsListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class arTermsListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public arTermsListRequestBody() {
        }
        
        public arTermsListRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class arTermsListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="arTermsListResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.arTermsListResponseBody Body;
        
        public arTermsListResponse() {
        }
        
        public arTermsListResponse(Microline.WS.Connector.Service.arTermsListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class arTermsListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string arTermsListResult;
        
        public arTermsListResponseBody() {
        }
        
        public arTermsListResponseBody(string arTermsListResult) {
            this.arTermsListResult = arTermsListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemTypeListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemTypeList", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemTypeListRequestBody Body;
        
        public itemTypeListRequest() {
        }
        
        public itemTypeListRequest(Microline.WS.Connector.Service.itemTypeListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemTypeListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public itemTypeListRequestBody() {
        }
        
        public itemTypeListRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemTypeListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemTypeListResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemTypeListResponseBody Body;
        
        public itemTypeListResponse() {
        }
        
        public itemTypeListResponse(Microline.WS.Connector.Service.itemTypeListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemTypeListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string itemTypeListResult;
        
        public itemTypeListResponseBody() {
        }
        
        public itemTypeListResponseBody(string itemTypeListResult) {
            this.itemTypeListResult = itemTypeListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemSubTypeListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemSubTypeList", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemSubTypeListRequestBody Body;
        
        public itemSubTypeListRequest() {
        }
        
        public itemSubTypeListRequest(Microline.WS.Connector.Service.itemSubTypeListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemSubTypeListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string onlyForItemTypeKey;
        
        public itemSubTypeListRequestBody() {
        }
        
        public itemSubTypeListRequestBody(string aspServer, string customerKey, string password, string cookie, string onlyForItemTypeKey) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.onlyForItemTypeKey = onlyForItemTypeKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class itemSubTypeListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="itemSubTypeListResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.itemSubTypeListResponseBody Body;
        
        public itemSubTypeListResponse() {
        }
        
        public itemSubTypeListResponse(Microline.WS.Connector.Service.itemSubTypeListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class itemSubTypeListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string itemSubTypeListResult;
        
        public itemSubTypeListResponseBody() {
        }
        
        public itemSubTypeListResponseBody(string itemSubTypeListResult) {
            this.itemSubTypeListResult = itemSubTypeListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class tradeMarkListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="tradeMarkList", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.tradeMarkListRequestBody Body;
        
        public tradeMarkListRequest() {
        }
        
        public tradeMarkListRequest(Microline.WS.Connector.Service.tradeMarkListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class tradeMarkListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public tradeMarkListRequestBody() {
        }
        
        public tradeMarkListRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class tradeMarkListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="tradeMarkListResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.tradeMarkListResponseBody Body;
        
        public tradeMarkListResponse() {
        }
        
        public tradeMarkListResponse(Microline.WS.Connector.Service.tradeMarkListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class tradeMarkListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string tradeMarkListResult;
        
        public tradeMarkListResponseBody() {
        }
        
        public tradeMarkListResponseBody(string tradeMarkListResult) {
            this.tradeMarkListResult = tradeMarkListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class priceListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="priceList", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.priceListRequestBody Body;
        
        public priceListRequest() {
        }
        
        public priceListRequest(Microline.WS.Connector.Service.priceListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class priceListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public priceListRequestBody() {
        }
        
        public priceListRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class priceListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="priceListResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.priceListResponseBody Body;
        
        public priceListResponse() {
        }
        
        public priceListResponse(Microline.WS.Connector.Service.priceListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class priceListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string priceListResult;
        
        public priceListResponseBody() {
        }
        
        public priceListResponseBody(string priceListResult) {
            this.priceListResult = priceListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class priceListForSCEndUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="priceListForSCEndUser", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.priceListForSCEndUserRequestBody Body;
        
        public priceListForSCEndUserRequest() {
        }
        
        public priceListForSCEndUserRequest(Microline.WS.Connector.Service.priceListForSCEndUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class priceListForSCEndUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string tradeMarkKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string itemTypeKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool includeTax;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool onlyOnStock;
        
        public priceListForSCEndUserRequestBody() {
        }
        
        public priceListForSCEndUserRequestBody(string aspServer, string customerKey, string password, string cookie, string tradeMarkKey, string itemTypeKey, bool includeTax, bool onlyOnStock) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.tradeMarkKey = tradeMarkKey;
            this.itemTypeKey = itemTypeKey;
            this.includeTax = includeTax;
            this.onlyOnStock = onlyOnStock;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class priceListForSCEndUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="priceListForSCEndUserResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.priceListForSCEndUserResponseBody Body;
        
        public priceListForSCEndUserResponse() {
        }
        
        public priceListForSCEndUserResponse(Microline.WS.Connector.Service.priceListForSCEndUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class priceListForSCEndUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string priceListForSCEndUserResult;
        
        public priceListForSCEndUserResponseBody() {
        }
        
        public priceListForSCEndUserResponseBody(string priceListForSCEndUserResult) {
            this.priceListForSCEndUserResult = priceListForSCEndUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class customerStatementRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="customerStatement", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.customerStatementRequestBody Body;
        
        public customerStatementRequest() {
        }
        
        public customerStatementRequest(Microline.WS.Connector.Service.customerStatementRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class customerStatementRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public customerStatementRequestBody() {
        }
        
        public customerStatementRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class customerStatementResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="customerStatementResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.customerStatementResponseBody Body;
        
        public customerStatementResponse() {
        }
        
        public customerStatementResponse(Microline.WS.Connector.Service.customerStatementResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class customerStatementResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string customerStatementResult;
        
        public customerStatementResponseBody() {
        }
        
        public customerStatementResponseBody(string customerStatementResult) {
            this.customerStatementResult = customerStatementResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class salesInvoicesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="salesInvoices", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.salesInvoicesRequestBody Body;
        
        public salesInvoicesRequest() {
        }
        
        public salesInvoicesRequest(Microline.WS.Connector.Service.salesInvoicesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class salesInvoicesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string delimitedSysdocids;
        
        public salesInvoicesRequestBody() {
        }
        
        public salesInvoicesRequestBody(string aspServer, string customerKey, string password, string cookie, string delimitedSysdocids) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.delimitedSysdocids = delimitedSysdocids;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class salesInvoicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="salesInvoicesResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.salesInvoicesResponseBody Body;
        
        public salesInvoicesResponse() {
        }
        
        public salesInvoicesResponse(Microline.WS.Connector.Service.salesInvoicesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class salesInvoicesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string salesInvoicesResult;
        
        public salesInvoicesResponseBody() {
        }
        
        public salesInvoicesResponseBody(string salesInvoicesResult) {
            this.salesInvoicesResult = salesInvoicesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class serialNumbersInSalesInvoiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="serialNumbersInSalesInvoice", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequestBody Body;
        
        public serialNumbersInSalesInvoiceRequest() {
        }
        
        public serialNumbersInSalesInvoiceRequest(Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class serialNumbersInSalesInvoiceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string sysdocid;
        
        public serialNumbersInSalesInvoiceRequestBody() {
        }
        
        public serialNumbersInSalesInvoiceRequestBody(string aspServer, string customerKey, string password, string cookie, string sysdocid) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.sysdocid = sysdocid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class serialNumbersInSalesInvoiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="serialNumbersInSalesInvoiceResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.serialNumbersInSalesInvoiceResponseBody Body;
        
        public serialNumbersInSalesInvoiceResponse() {
        }
        
        public serialNumbersInSalesInvoiceResponse(Microline.WS.Connector.Service.serialNumbersInSalesInvoiceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class serialNumbersInSalesInvoiceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string serialNumbersInSalesInvoiceResult;
        
        public serialNumbersInSalesInvoiceResponseBody() {
        }
        
        public serialNumbersInSalesInvoiceResponseBody(string serialNumbersInSalesInvoiceResult) {
            this.serialNumbersInSalesInvoiceResult = serialNumbersInSalesInvoiceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class salesInvoiceSysdocidForNumberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="salesInvoiceSysdocidForNumber", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequestBody Body;
        
        public salesInvoiceSysdocidForNumberRequest() {
        }
        
        public salesInvoiceSysdocidForNumberRequest(Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class salesInvoiceSysdocidForNumberRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string number;
        
        public salesInvoiceSysdocidForNumberRequestBody() {
        }
        
        public salesInvoiceSysdocidForNumberRequestBody(string aspServer, string customerKey, string password, string cookie, string number) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.number = number;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class salesInvoiceSysdocidForNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="salesInvoiceSysdocidForNumberResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberResponseBody Body;
        
        public salesInvoiceSysdocidForNumberResponse() {
        }
        
        public salesInvoiceSysdocidForNumberResponse(Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class salesInvoiceSysdocidForNumberResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string salesInvoiceSysdocidForNumberResult;
        
        public salesInvoiceSysdocidForNumberResponseBody() {
        }
        
        public salesInvoiceSysdocidForNumberResponseBody(string salesInvoiceSysdocidForNumberResult) {
            this.salesInvoiceSysdocidForNumberResult = salesInvoiceSysdocidForNumberResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class postTemporarySORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="postTemporarySO", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.postTemporarySORequestBody Body;
        
        public postTemporarySORequest() {
        }
        
        public postTemporarySORequest(Microline.WS.Connector.Service.postTemporarySORequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class postTemporarySORequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public postTemporarySORequestBody() {
        }
        
        public postTemporarySORequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class postTemporarySOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="postTemporarySOResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.postTemporarySOResponseBody Body;
        
        public postTemporarySOResponse() {
        }
        
        public postTemporarySOResponse(Microline.WS.Connector.Service.postTemporarySOResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class postTemporarySOResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string postTemporarySOResult;
        
        public postTemporarySOResponseBody() {
        }
        
        public postTemporarySOResponseBody(string postTemporarySOResult) {
            this.postTemporarySOResult = postTemporarySOResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addSORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="addSO", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.addSORequestBody Body;
        
        public addSORequest() {
        }
        
        public addSORequest(Microline.WS.Connector.Service.addSORequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class addSORequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string xml;
        
        public addSORequestBody() {
        }
        
        public addSORequestBody(string aspServer, string customerKey, string password, string cookie, string xml) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.xml = xml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addSOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="addSOResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.addSOResponseBody Body;
        
        public addSOResponse() {
        }
        
        public addSOResponse(Microline.WS.Connector.Service.addSOResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class addSOResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string addSOResult;
        
        public addSOResponseBody() {
        }
        
        public addSOResponseBody(string addSOResult) {
            this.addSOResult = addSOResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class deleteSORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="deleteSO", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.deleteSORequestBody Body;
        
        public deleteSORequest() {
        }
        
        public deleteSORequest(Microline.WS.Connector.Service.deleteSORequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class deleteSORequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int pk;
        
        public deleteSORequestBody() {
        }
        
        public deleteSORequestBody(string aspServer, string customerKey, string password, string cookie, int pk) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.pk = pk;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class deleteSOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="deleteSOResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.deleteSOResponseBody Body;
        
        public deleteSOResponse() {
        }
        
        public deleteSOResponse(Microline.WS.Connector.Service.deleteSOResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class deleteSOResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deleteSOResult;
        
        public deleteSOResponseBody() {
        }
        
        public deleteSOResponseBody(string deleteSOResult) {
            this.deleteSOResult = deleteSOResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class deliverSORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="deliverSO", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.deliverSORequestBody Body;
        
        public deliverSORequest() {
        }
        
        public deliverSORequest(Microline.WS.Connector.Service.deliverSORequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class deliverSORequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int pk;
        
        public deliverSORequestBody() {
        }
        
        public deliverSORequestBody(string aspServer, string customerKey, string password, string cookie, int pk) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.pk = pk;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class deliverSOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="deliverSOResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.deliverSOResponseBody Body;
        
        public deliverSOResponse() {
        }
        
        public deliverSOResponse(Microline.WS.Connector.Service.deliverSOResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class deliverSOResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deliverSOResult;
        
        public deliverSOResponseBody() {
        }
        
        public deliverSOResponseBody(string deliverSOResult) {
            this.deliverSOResult = deliverSOResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class deletePORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="deletePO", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.deletePORequestBody Body;
        
        public deletePORequest() {
        }
        
        public deletePORequest(Microline.WS.Connector.Service.deletePORequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class deletePORequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int pk;
        
        public deletePORequestBody() {
        }
        
        public deletePORequestBody(string aspServer, string customerKey, string password, string cookie, int pk) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.pk = pk;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class deletePOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="deletePOResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.deletePOResponseBody Body;
        
        public deletePOResponse() {
        }
        
        public deletePOResponse(Microline.WS.Connector.Service.deletePOResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class deletePOResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deletePOResult;
        
        public deletePOResponseBody() {
        }
        
        public deletePOResponseBody(string deletePOResult) {
            this.deletePOResult = deletePOResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class confirmSORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="confirmSO", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.confirmSORequestBody Body;
        
        public confirmSORequest() {
        }
        
        public confirmSORequest(Microline.WS.Connector.Service.confirmSORequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class confirmSORequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int id;
        
        public confirmSORequestBody() {
        }
        
        public confirmSORequestBody(string aspServer, string customerKey, string password, string cookie, int id) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class confirmSOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="confirmSOResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.confirmSOResponseBody Body;
        
        public confirmSOResponse() {
        }
        
        public confirmSOResponse(Microline.WS.Connector.Service.confirmSOResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class confirmSOResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string confirmSOResult;
        
        public confirmSOResponseBody() {
        }
        
        public confirmSOResponseBody(string confirmSOResult) {
            this.confirmSOResult = confirmSOResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="addItem", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.addItemRequestBody Body;
        
        public addItemRequest() {
        }
        
        public addItemRequest(Microline.WS.Connector.Service.addItemRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class addItemRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string xml;
        
        public addItemRequestBody() {
        }
        
        public addItemRequestBody(string aspServer, string customerKey, string password, string cookie, string xml) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.xml = xml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="addItemResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.addItemResponseBody Body;
        
        public addItemResponse() {
        }
        
        public addItemResponse(Microline.WS.Connector.Service.addItemResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class addItemResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string addItemResult;
        
        public addItemResponseBody() {
        }
        
        public addItemResponseBody(string addItemResult) {
            this.addItemResult = addItemResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class changeItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="changeItem", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.changeItemRequestBody Body;
        
        public changeItemRequest() {
        }
        
        public changeItemRequest(Microline.WS.Connector.Service.changeItemRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class changeItemRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string xml;
        
        public changeItemRequestBody() {
        }
        
        public changeItemRequestBody(string aspServer, string customerKey, string password, string cookie, string xml) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.xml = xml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class changeItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="changeItemResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.changeItemResponseBody Body;
        
        public changeItemResponse() {
        }
        
        public changeItemResponse(Microline.WS.Connector.Service.changeItemResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class changeItemResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string changeItemResult;
        
        public changeItemResponseBody() {
        }
        
        public changeItemResponseBody(string changeItemResult) {
            this.changeItemResult = changeItemResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class confirmPORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="confirmPO", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.confirmPORequestBody Body;
        
        public confirmPORequest() {
        }
        
        public confirmPORequest(Microline.WS.Connector.Service.confirmPORequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class confirmPORequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int id;
        
        public confirmPORequestBody() {
        }
        
        public confirmPORequestBody(string aspServer, string customerKey, string password, string cookie, int id) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class confirmPOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="confirmPOResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.confirmPOResponseBody Body;
        
        public confirmPOResponse() {
        }
        
        public confirmPOResponse(Microline.WS.Connector.Service.confirmPOResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class confirmPOResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string confirmPOResult;
        
        public confirmPOResponseBody() {
        }
        
        public confirmPOResponseBody(string confirmPOResult) {
            this.confirmPOResult = confirmPOResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addPORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="addPO", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.addPORequestBody Body;
        
        public addPORequest() {
        }
        
        public addPORequest(Microline.WS.Connector.Service.addPORequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class addPORequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string xml;
        
        public addPORequestBody() {
        }
        
        public addPORequestBody(string aspServer, string customerKey, string password, string cookie, string xml) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.xml = xml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addPOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="addPOResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.addPOResponseBody Body;
        
        public addPOResponse() {
        }
        
        public addPOResponse(Microline.WS.Connector.Service.addPOResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class addPOResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string addPOResult;
        
        public addPOResponseBody() {
        }
        
        public addPOResponseBody(string addPOResult) {
            this.addPOResult = addPOResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class locationContentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="locationContent", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.locationContentRequestBody Body;
        
        public locationContentRequest() {
        }
        
        public locationContentRequest(Microline.WS.Connector.Service.locationContentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class locationContentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string locationKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string itemKeyLike;
        
        public locationContentRequestBody() {
        }
        
        public locationContentRequestBody(string aspServer, string customerKey, string password, string cookie, string locationKey, string itemKeyLike) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.locationKey = locationKey;
            this.itemKeyLike = itemKeyLike;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class locationContentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="locationContentResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.locationContentResponseBody Body;
        
        public locationContentResponse() {
        }
        
        public locationContentResponse(Microline.WS.Connector.Service.locationContentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class locationContentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string locationContentResult;
        
        public locationContentResponseBody() {
        }
        
        public locationContentResponseBody(string locationContentResult) {
            this.locationContentResult = locationContentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class racksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="racks", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.racksRequestBody Body;
        
        public racksRequest() {
        }
        
        public racksRequest(Microline.WS.Connector.Service.racksRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class racksRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string locationKey;
        
        public racksRequestBody() {
        }
        
        public racksRequestBody(string aspServer, string customerKey, string password, string cookie, string locationKey) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.locationKey = locationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class racksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="racksResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.racksResponseBody Body;
        
        public racksResponse() {
        }
        
        public racksResponse(Microline.WS.Connector.Service.racksResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class racksResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string racksResult;
        
        public racksResponseBody() {
        }
        
        public racksResponseBody(string racksResult) {
            this.racksResult = racksResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class salesOrdersLinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="salesOrdersLines", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.salesOrdersLinesRequestBody Body;
        
        public salesOrdersLinesRequest() {
        }
        
        public salesOrdersLinesRequest(Microline.WS.Connector.Service.salesOrdersLinesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class salesOrdersLinesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public salesOrdersLinesRequestBody() {
        }
        
        public salesOrdersLinesRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class salesOrdersLinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="salesOrdersLinesResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.salesOrdersLinesResponseBody Body;
        
        public salesOrdersLinesResponse() {
        }
        
        public salesOrdersLinesResponse(Microline.WS.Connector.Service.salesOrdersLinesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class salesOrdersLinesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string salesOrdersLinesResult;
        
        public salesOrdersLinesResponseBody() {
        }
        
        public salesOrdersLinesResponseBody(string salesOrdersLinesResult) {
            this.salesOrdersLinesResult = salesOrdersLinesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class availabilityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="availability", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.availabilityRequestBody Body;
        
        public availabilityRequest() {
        }
        
        public availabilityRequest(Microline.WS.Connector.Service.availabilityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class availabilityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public availabilityRequestBody() {
        }
        
        public availabilityRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class availabilityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="availabilityResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.availabilityResponseBody Body;
        
        public availabilityResponse() {
        }
        
        public availabilityResponse(Microline.WS.Connector.Service.availabilityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class availabilityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string availabilityResult;
        
        public availabilityResponseBody() {
        }
        
        public availabilityResponseBody(string availabilityResult) {
            this.availabilityResult = availabilityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class purchaseOrdersLinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="purchaseOrdersLines", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.purchaseOrdersLinesRequestBody Body;
        
        public purchaseOrdersLinesRequest() {
        }
        
        public purchaseOrdersLinesRequest(Microline.WS.Connector.Service.purchaseOrdersLinesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class purchaseOrdersLinesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string vendorInvoiceNumberLike;
        
        public purchaseOrdersLinesRequestBody() {
        }
        
        public purchaseOrdersLinesRequestBody(string aspServer, string customerKey, string password, string cookie, string vendorInvoiceNumberLike) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.vendorInvoiceNumberLike = vendorInvoiceNumberLike;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class purchaseOrdersLinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="purchaseOrdersLinesResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.purchaseOrdersLinesResponseBody Body;
        
        public purchaseOrdersLinesResponse() {
        }
        
        public purchaseOrdersLinesResponse(Microline.WS.Connector.Service.purchaseOrdersLinesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class purchaseOrdersLinesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string purchaseOrdersLinesResult;
        
        public purchaseOrdersLinesResponseBody() {
        }
        
        public purchaseOrdersLinesResponseBody(string purchaseOrdersLinesResult) {
            this.purchaseOrdersLinesResult = purchaseOrdersLinesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class salesOrdersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="salesOrders", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.salesOrdersRequestBody Body;
        
        public salesOrdersRequest() {
        }
        
        public salesOrdersRequest(Microline.WS.Connector.Service.salesOrdersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class salesOrdersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        public salesOrdersRequestBody() {
        }
        
        public salesOrdersRequestBody(string aspServer, string customerKey, string password, string cookie) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class salesOrdersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="salesOrdersResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.salesOrdersResponseBody Body;
        
        public salesOrdersResponse() {
        }
        
        public salesOrdersResponse(Microline.WS.Connector.Service.salesOrdersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class salesOrdersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string salesOrdersResult;
        
        public salesOrdersResponseBody() {
        }
        
        public salesOrdersResponseBody(string salesOrdersResult) {
            this.salesOrdersResult = salesOrdersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class purchaseOrdersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="purchaseOrders", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.purchaseOrdersRequestBody Body;
        
        public purchaseOrdersRequest() {
        }
        
        public purchaseOrdersRequest(Microline.WS.Connector.Service.purchaseOrdersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class purchaseOrdersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string vendorInvoiceNumberLike;
        
        public purchaseOrdersRequestBody() {
        }
        
        public purchaseOrdersRequestBody(string aspServer, string customerKey, string password, string cookie, string vendorInvoiceNumberLike) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.vendorInvoiceNumberLike = vendorInvoiceNumberLike;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class purchaseOrdersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="purchaseOrdersResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.purchaseOrdersResponseBody Body;
        
        public purchaseOrdersResponse() {
        }
        
        public purchaseOrdersResponse(Microline.WS.Connector.Service.purchaseOrdersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class purchaseOrdersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string purchaseOrdersResult;
        
        public purchaseOrdersResponseBody() {
        }
        
        public purchaseOrdersResponseBody(string purchaseOrdersResult) {
            this.purchaseOrdersResult = purchaseOrdersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class transactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="transaction", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.transactionRequestBody Body;
        
        public transactionRequest() {
        }
        
        public transactionRequest(Microline.WS.Connector.Service.transactionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class transactionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string documentNumber;
        
        public transactionRequestBody() {
        }
        
        public transactionRequestBody(string aspServer, string customerKey, string password, string cookie, string documentNumber) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.documentNumber = documentNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class transactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="transactionResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.transactionResponseBody Body;
        
        public transactionResponse() {
        }
        
        public transactionResponse(Microline.WS.Connector.Service.transactionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class transactionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string transactionResult;
        
        public transactionResponseBody() {
        }
        
        public transactionResponseBody(string transactionResult) {
            this.transactionResult = transactionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class soPKRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="soPK", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.soPKRequestBody Body;
        
        public soPKRequest() {
        }
        
        public soPKRequest(Microline.WS.Connector.Service.soPKRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class soPKRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string orderNumber;
        
        public soPKRequestBody() {
        }
        
        public soPKRequestBody(string aspServer, string customerKey, string password, string cookie, string orderNumber) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.orderNumber = orderNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class soPKResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="soPKResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.soPKResponseBody Body;
        
        public soPKResponse() {
        }
        
        public soPKResponse(Microline.WS.Connector.Service.soPKResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class soPKResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string soPKResult;
        
        public soPKResponseBody() {
        }
        
        public soPKResponseBody(string soPKResult) {
            this.soPKResult = soPKResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class poPKRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="poPK", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.poPKRequestBody Body;
        
        public poPKRequest() {
        }
        
        public poPKRequest(Microline.WS.Connector.Service.poPKRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class poPKRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string orderNumber;
        
        public poPKRequestBody() {
        }
        
        public poPKRequestBody(string aspServer, string customerKey, string password, string cookie, string orderNumber) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.orderNumber = orderNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class poPKResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="poPKResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.poPKResponseBody Body;
        
        public poPKResponse() {
        }
        
        public poPKResponse(Microline.WS.Connector.Service.poPKResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class poPKResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string poPKResult;
        
        public poPKResponseBody() {
        }
        
        public poPKResponseBody(string poPKResult) {
            this.poPKResult = poPKResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class soDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="soData", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.soDataRequestBody Body;
        
        public soDataRequest() {
        }
        
        public soDataRequest(Microline.WS.Connector.Service.soDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class soDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int pk;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool extraData;
        
        public soDataRequestBody() {
        }
        
        public soDataRequestBody(string aspServer, string customerKey, string password, string cookie, int pk, bool extraData) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.pk = pk;
            this.extraData = extraData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class soDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="soDataResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.soDataResponseBody Body;
        
        public soDataResponse() {
        }
        
        public soDataResponse(Microline.WS.Connector.Service.soDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class soDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string soDataResult;
        
        public soDataResponseBody() {
        }
        
        public soDataResponseBody(string soDataResult) {
            this.soDataResult = soDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class findRMARequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="findRMA", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.findRMARequestBody Body;
        
        public findRMARequest() {
        }
        
        public findRMARequest(Microline.WS.Connector.Service.findRMARequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class findRMARequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string aspServer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string customerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cookie;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string exactSerialNumber;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string optionalItemKey;
        
        public findRMARequestBody() {
        }
        
        public findRMARequestBody(string aspServer, string customerKey, string password, string cookie, string exactSerialNumber, string optionalItemKey) {
            this.aspServer = aspServer;
            this.customerKey = customerKey;
            this.password = password;
            this.cookie = cookie;
            this.exactSerialNumber = exactSerialNumber;
            this.optionalItemKey = optionalItemKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class findRMAResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="findRMAResponse", Namespace="http://microline.hr/WebServices", Order=0)]
        public Microline.WS.Connector.Service.findRMAResponseBody Body;
        
        public findRMAResponse() {
        }
        
        public findRMAResponse(Microline.WS.Connector.Service.findRMAResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://microline.hr/WebServices")]
    public partial class findRMAResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string findRMAResult;
        
        public findRMAResponseBody() {
        }
        
        public findRMAResponseBody(string findRMAResult) {
            this.findRMAResult = findRMAResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MOLSoapChannel : Microline.WS.Connector.Service.MOLSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MOLSoapClient : System.ServiceModel.ClientBase<Microline.WS.Connector.Service.MOLSoap>, Microline.WS.Connector.Service.MOLSoap {
        
        public MOLSoapClient() {
        }
        
        public MOLSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MOLSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MOLSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MOLSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.itemDataResponse Microline.WS.Connector.Service.MOLSoap.itemData(Microline.WS.Connector.Service.itemDataRequest request) {
            return base.Channel.itemData(request);
        }
        
        public string itemData(string aspServer, string customerKey, string password, string cookie, string itemKey, long quantity, bool extraInfo, string termsKey) {
            Microline.WS.Connector.Service.itemDataRequest inValue = new Microline.WS.Connector.Service.itemDataRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemDataRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.itemKey = itemKey;
            inValue.Body.quantity = quantity;
            inValue.Body.extraInfo = extraInfo;
            inValue.Body.termsKey = termsKey;
            Microline.WS.Connector.Service.itemDataResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).itemData(inValue);
            return retVal.Body.itemDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemDataResponse> Microline.WS.Connector.Service.MOLSoap.itemDataAsync(Microline.WS.Connector.Service.itemDataRequest request) {
            return base.Channel.itemDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemDataResponse> itemDataAsync(string aspServer, string customerKey, string password, string cookie, string itemKey, long quantity, bool extraInfo, string termsKey) {
            Microline.WS.Connector.Service.itemDataRequest inValue = new Microline.WS.Connector.Service.itemDataRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemDataRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.itemKey = itemKey;
            inValue.Body.quantity = quantity;
            inValue.Body.extraInfo = extraInfo;
            inValue.Body.termsKey = termsKey;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).itemDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.itemListResponse Microline.WS.Connector.Service.MOLSoap.itemList(Microline.WS.Connector.Service.itemListRequest request) {
            return base.Channel.itemList(request);
        }
        
        public string itemList(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.itemListRequest inValue = new Microline.WS.Connector.Service.itemListRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.itemListResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).itemList(inValue);
            return retVal.Body.itemListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListResponse> Microline.WS.Connector.Service.MOLSoap.itemListAsync(Microline.WS.Connector.Service.itemListRequest request) {
            return base.Channel.itemListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListResponse> itemListAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.itemListRequest inValue = new Microline.WS.Connector.Service.itemListRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).itemListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.itemListFilteredResponse Microline.WS.Connector.Service.MOLSoap.itemListFiltered(Microline.WS.Connector.Service.itemListFilteredRequest request) {
            return base.Channel.itemListFiltered(request);
        }
        
        public string itemListFiltered(string aspServer, string customerKey, string password, string cookie, string tradeMarkKey, string itemTypeKey, bool extraInfo) {
            Microline.WS.Connector.Service.itemListFilteredRequest inValue = new Microline.WS.Connector.Service.itemListFilteredRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemListFilteredRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.tradeMarkKey = tradeMarkKey;
            inValue.Body.itemTypeKey = itemTypeKey;
            inValue.Body.extraInfo = extraInfo;
            Microline.WS.Connector.Service.itemListFilteredResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).itemListFiltered(inValue);
            return retVal.Body.itemListFilteredResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListFilteredResponse> Microline.WS.Connector.Service.MOLSoap.itemListFilteredAsync(Microline.WS.Connector.Service.itemListFilteredRequest request) {
            return base.Channel.itemListFilteredAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListFilteredResponse> itemListFilteredAsync(string aspServer, string customerKey, string password, string cookie, string tradeMarkKey, string itemTypeKey, bool extraInfo) {
            Microline.WS.Connector.Service.itemListFilteredRequest inValue = new Microline.WS.Connector.Service.itemListFilteredRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemListFilteredRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.tradeMarkKey = tradeMarkKey;
            inValue.Body.itemTypeKey = itemTypeKey;
            inValue.Body.extraInfo = extraInfo;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).itemListFilteredAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.itemListAndDataResponse Microline.WS.Connector.Service.MOLSoap.itemListAndData(Microline.WS.Connector.Service.itemListAndDataRequest request) {
            return base.Channel.itemListAndData(request);
        }
        
        public string itemListAndData(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.itemListAndDataRequest inValue = new Microline.WS.Connector.Service.itemListAndDataRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemListAndDataRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.itemListAndDataResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).itemListAndData(inValue);
            return retVal.Body.itemListAndDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListAndDataResponse> Microline.WS.Connector.Service.MOLSoap.itemListAndDataAsync(Microline.WS.Connector.Service.itemListAndDataRequest request) {
            return base.Channel.itemListAndDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemListAndDataResponse> itemListAndDataAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.itemListAndDataRequest inValue = new Microline.WS.Connector.Service.itemListAndDataRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemListAndDataRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).itemListAndDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.arTermsListResponse Microline.WS.Connector.Service.MOLSoap.arTermsList(Microline.WS.Connector.Service.arTermsListRequest request) {
            return base.Channel.arTermsList(request);
        }
        
        public string arTermsList(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.arTermsListRequest inValue = new Microline.WS.Connector.Service.arTermsListRequest();
            inValue.Body = new Microline.WS.Connector.Service.arTermsListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.arTermsListResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).arTermsList(inValue);
            return retVal.Body.arTermsListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.arTermsListResponse> Microline.WS.Connector.Service.MOLSoap.arTermsListAsync(Microline.WS.Connector.Service.arTermsListRequest request) {
            return base.Channel.arTermsListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.arTermsListResponse> arTermsListAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.arTermsListRequest inValue = new Microline.WS.Connector.Service.arTermsListRequest();
            inValue.Body = new Microline.WS.Connector.Service.arTermsListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).arTermsListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.itemTypeListResponse Microline.WS.Connector.Service.MOLSoap.itemTypeList(Microline.WS.Connector.Service.itemTypeListRequest request) {
            return base.Channel.itemTypeList(request);
        }
        
        public string itemTypeList(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.itemTypeListRequest inValue = new Microline.WS.Connector.Service.itemTypeListRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemTypeListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.itemTypeListResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).itemTypeList(inValue);
            return retVal.Body.itemTypeListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemTypeListResponse> Microline.WS.Connector.Service.MOLSoap.itemTypeListAsync(Microline.WS.Connector.Service.itemTypeListRequest request) {
            return base.Channel.itemTypeListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemTypeListResponse> itemTypeListAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.itemTypeListRequest inValue = new Microline.WS.Connector.Service.itemTypeListRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemTypeListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).itemTypeListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.itemSubTypeListResponse Microline.WS.Connector.Service.MOLSoap.itemSubTypeList(Microline.WS.Connector.Service.itemSubTypeListRequest request) {
            return base.Channel.itemSubTypeList(request);
        }
        
        public string itemSubTypeList(string aspServer, string customerKey, string password, string cookie, string onlyForItemTypeKey) {
            Microline.WS.Connector.Service.itemSubTypeListRequest inValue = new Microline.WS.Connector.Service.itemSubTypeListRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemSubTypeListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.onlyForItemTypeKey = onlyForItemTypeKey;
            Microline.WS.Connector.Service.itemSubTypeListResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).itemSubTypeList(inValue);
            return retVal.Body.itemSubTypeListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemSubTypeListResponse> Microline.WS.Connector.Service.MOLSoap.itemSubTypeListAsync(Microline.WS.Connector.Service.itemSubTypeListRequest request) {
            return base.Channel.itemSubTypeListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.itemSubTypeListResponse> itemSubTypeListAsync(string aspServer, string customerKey, string password, string cookie, string onlyForItemTypeKey) {
            Microline.WS.Connector.Service.itemSubTypeListRequest inValue = new Microline.WS.Connector.Service.itemSubTypeListRequest();
            inValue.Body = new Microline.WS.Connector.Service.itemSubTypeListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.onlyForItemTypeKey = onlyForItemTypeKey;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).itemSubTypeListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.tradeMarkListResponse Microline.WS.Connector.Service.MOLSoap.tradeMarkList(Microline.WS.Connector.Service.tradeMarkListRequest request) {
            return base.Channel.tradeMarkList(request);
        }
        
        public string tradeMarkList(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.tradeMarkListRequest inValue = new Microline.WS.Connector.Service.tradeMarkListRequest();
            inValue.Body = new Microline.WS.Connector.Service.tradeMarkListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.tradeMarkListResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).tradeMarkList(inValue);
            return retVal.Body.tradeMarkListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.tradeMarkListResponse> Microline.WS.Connector.Service.MOLSoap.tradeMarkListAsync(Microline.WS.Connector.Service.tradeMarkListRequest request) {
            return base.Channel.tradeMarkListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.tradeMarkListResponse> tradeMarkListAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.tradeMarkListRequest inValue = new Microline.WS.Connector.Service.tradeMarkListRequest();
            inValue.Body = new Microline.WS.Connector.Service.tradeMarkListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).tradeMarkListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.priceListResponse Microline.WS.Connector.Service.MOLSoap.priceList(Microline.WS.Connector.Service.priceListRequest request) {
            return base.Channel.priceList(request);
        }
        
        public string priceList(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.priceListRequest inValue = new Microline.WS.Connector.Service.priceListRequest();
            inValue.Body = new Microline.WS.Connector.Service.priceListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.priceListResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).priceList(inValue);
            return retVal.Body.priceListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.priceListResponse> Microline.WS.Connector.Service.MOLSoap.priceListAsync(Microline.WS.Connector.Service.priceListRequest request) {
            return base.Channel.priceListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.priceListResponse> priceListAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.priceListRequest inValue = new Microline.WS.Connector.Service.priceListRequest();
            inValue.Body = new Microline.WS.Connector.Service.priceListRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).priceListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.priceListForSCEndUserResponse Microline.WS.Connector.Service.MOLSoap.priceListForSCEndUser(Microline.WS.Connector.Service.priceListForSCEndUserRequest request) {
            return base.Channel.priceListForSCEndUser(request);
        }
        
        public string priceListForSCEndUser(string aspServer, string customerKey, string password, string cookie, string tradeMarkKey, string itemTypeKey, bool includeTax, bool onlyOnStock) {
            Microline.WS.Connector.Service.priceListForSCEndUserRequest inValue = new Microline.WS.Connector.Service.priceListForSCEndUserRequest();
            inValue.Body = new Microline.WS.Connector.Service.priceListForSCEndUserRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.tradeMarkKey = tradeMarkKey;
            inValue.Body.itemTypeKey = itemTypeKey;
            inValue.Body.includeTax = includeTax;
            inValue.Body.onlyOnStock = onlyOnStock;
            Microline.WS.Connector.Service.priceListForSCEndUserResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).priceListForSCEndUser(inValue);
            return retVal.Body.priceListForSCEndUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.priceListForSCEndUserResponse> Microline.WS.Connector.Service.MOLSoap.priceListForSCEndUserAsync(Microline.WS.Connector.Service.priceListForSCEndUserRequest request) {
            return base.Channel.priceListForSCEndUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.priceListForSCEndUserResponse> priceListForSCEndUserAsync(string aspServer, string customerKey, string password, string cookie, string tradeMarkKey, string itemTypeKey, bool includeTax, bool onlyOnStock) {
            Microline.WS.Connector.Service.priceListForSCEndUserRequest inValue = new Microline.WS.Connector.Service.priceListForSCEndUserRequest();
            inValue.Body = new Microline.WS.Connector.Service.priceListForSCEndUserRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.tradeMarkKey = tradeMarkKey;
            inValue.Body.itemTypeKey = itemTypeKey;
            inValue.Body.includeTax = includeTax;
            inValue.Body.onlyOnStock = onlyOnStock;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).priceListForSCEndUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.customerStatementResponse Microline.WS.Connector.Service.MOLSoap.customerStatement(Microline.WS.Connector.Service.customerStatementRequest request) {
            return base.Channel.customerStatement(request);
        }
        
        public string customerStatement(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.customerStatementRequest inValue = new Microline.WS.Connector.Service.customerStatementRequest();
            inValue.Body = new Microline.WS.Connector.Service.customerStatementRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.customerStatementResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).customerStatement(inValue);
            return retVal.Body.customerStatementResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.customerStatementResponse> Microline.WS.Connector.Service.MOLSoap.customerStatementAsync(Microline.WS.Connector.Service.customerStatementRequest request) {
            return base.Channel.customerStatementAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.customerStatementResponse> customerStatementAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.customerStatementRequest inValue = new Microline.WS.Connector.Service.customerStatementRequest();
            inValue.Body = new Microline.WS.Connector.Service.customerStatementRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).customerStatementAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.salesInvoicesResponse Microline.WS.Connector.Service.MOLSoap.salesInvoices(Microline.WS.Connector.Service.salesInvoicesRequest request) {
            return base.Channel.salesInvoices(request);
        }
        
        public string salesInvoices(string aspServer, string customerKey, string password, string cookie, string delimitedSysdocids) {
            Microline.WS.Connector.Service.salesInvoicesRequest inValue = new Microline.WS.Connector.Service.salesInvoicesRequest();
            inValue.Body = new Microline.WS.Connector.Service.salesInvoicesRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.delimitedSysdocids = delimitedSysdocids;
            Microline.WS.Connector.Service.salesInvoicesResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).salesInvoices(inValue);
            return retVal.Body.salesInvoicesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesInvoicesResponse> Microline.WS.Connector.Service.MOLSoap.salesInvoicesAsync(Microline.WS.Connector.Service.salesInvoicesRequest request) {
            return base.Channel.salesInvoicesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesInvoicesResponse> salesInvoicesAsync(string aspServer, string customerKey, string password, string cookie, string delimitedSysdocids) {
            Microline.WS.Connector.Service.salesInvoicesRequest inValue = new Microline.WS.Connector.Service.salesInvoicesRequest();
            inValue.Body = new Microline.WS.Connector.Service.salesInvoicesRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.delimitedSysdocids = delimitedSysdocids;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).salesInvoicesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.serialNumbersInSalesInvoiceResponse Microline.WS.Connector.Service.MOLSoap.serialNumbersInSalesInvoice(Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequest request) {
            return base.Channel.serialNumbersInSalesInvoice(request);
        }
        
        public string serialNumbersInSalesInvoice(string aspServer, string customerKey, string password, string cookie, string sysdocid) {
            Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequest inValue = new Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequest();
            inValue.Body = new Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.sysdocid = sysdocid;
            Microline.WS.Connector.Service.serialNumbersInSalesInvoiceResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).serialNumbersInSalesInvoice(inValue);
            return retVal.Body.serialNumbersInSalesInvoiceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.serialNumbersInSalesInvoiceResponse> Microline.WS.Connector.Service.MOLSoap.serialNumbersInSalesInvoiceAsync(Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequest request) {
            return base.Channel.serialNumbersInSalesInvoiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.serialNumbersInSalesInvoiceResponse> serialNumbersInSalesInvoiceAsync(string aspServer, string customerKey, string password, string cookie, string sysdocid) {
            Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequest inValue = new Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequest();
            inValue.Body = new Microline.WS.Connector.Service.serialNumbersInSalesInvoiceRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.sysdocid = sysdocid;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).serialNumbersInSalesInvoiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberResponse Microline.WS.Connector.Service.MOLSoap.salesInvoiceSysdocidForNumber(Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequest request) {
            return base.Channel.salesInvoiceSysdocidForNumber(request);
        }
        
        public string salesInvoiceSysdocidForNumber(string aspServer, string customerKey, string password, string cookie, string number) {
            Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequest inValue = new Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequest();
            inValue.Body = new Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.number = number;
            Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).salesInvoiceSysdocidForNumber(inValue);
            return retVal.Body.salesInvoiceSysdocidForNumberResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberResponse> Microline.WS.Connector.Service.MOLSoap.salesInvoiceSysdocidForNumberAsync(Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequest request) {
            return base.Channel.salesInvoiceSysdocidForNumberAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberResponse> salesInvoiceSysdocidForNumberAsync(string aspServer, string customerKey, string password, string cookie, string number) {
            Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequest inValue = new Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequest();
            inValue.Body = new Microline.WS.Connector.Service.salesInvoiceSysdocidForNumberRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.number = number;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).salesInvoiceSysdocidForNumberAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.postTemporarySOResponse Microline.WS.Connector.Service.MOLSoap.postTemporarySO(Microline.WS.Connector.Service.postTemporarySORequest request) {
            return base.Channel.postTemporarySO(request);
        }
        
        public string postTemporarySO(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.postTemporarySORequest inValue = new Microline.WS.Connector.Service.postTemporarySORequest();
            inValue.Body = new Microline.WS.Connector.Service.postTemporarySORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.postTemporarySOResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).postTemporarySO(inValue);
            return retVal.Body.postTemporarySOResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.postTemporarySOResponse> Microline.WS.Connector.Service.MOLSoap.postTemporarySOAsync(Microline.WS.Connector.Service.postTemporarySORequest request) {
            return base.Channel.postTemporarySOAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.postTemporarySOResponse> postTemporarySOAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.postTemporarySORequest inValue = new Microline.WS.Connector.Service.postTemporarySORequest();
            inValue.Body = new Microline.WS.Connector.Service.postTemporarySORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).postTemporarySOAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.addSOResponse Microline.WS.Connector.Service.MOLSoap.addSO(Microline.WS.Connector.Service.addSORequest request) {
            return base.Channel.addSO(request);
        }
        
        public string addSO(string aspServer, string customerKey, string password, string cookie, string xml) {
            Microline.WS.Connector.Service.addSORequest inValue = new Microline.WS.Connector.Service.addSORequest();
            inValue.Body = new Microline.WS.Connector.Service.addSORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.xml = xml;
            Microline.WS.Connector.Service.addSOResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).addSO(inValue);
            return retVal.Body.addSOResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.addSOResponse> Microline.WS.Connector.Service.MOLSoap.addSOAsync(Microline.WS.Connector.Service.addSORequest request) {
            return base.Channel.addSOAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.addSOResponse> addSOAsync(string aspServer, string customerKey, string password, string cookie, string xml) {
            Microline.WS.Connector.Service.addSORequest inValue = new Microline.WS.Connector.Service.addSORequest();
            inValue.Body = new Microline.WS.Connector.Service.addSORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.xml = xml;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).addSOAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.deleteSOResponse Microline.WS.Connector.Service.MOLSoap.deleteSO(Microline.WS.Connector.Service.deleteSORequest request) {
            return base.Channel.deleteSO(request);
        }
        
        public string deleteSO(string aspServer, string customerKey, string password, string cookie, int pk) {
            Microline.WS.Connector.Service.deleteSORequest inValue = new Microline.WS.Connector.Service.deleteSORequest();
            inValue.Body = new Microline.WS.Connector.Service.deleteSORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.pk = pk;
            Microline.WS.Connector.Service.deleteSOResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).deleteSO(inValue);
            return retVal.Body.deleteSOResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.deleteSOResponse> Microline.WS.Connector.Service.MOLSoap.deleteSOAsync(Microline.WS.Connector.Service.deleteSORequest request) {
            return base.Channel.deleteSOAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.deleteSOResponse> deleteSOAsync(string aspServer, string customerKey, string password, string cookie, int pk) {
            Microline.WS.Connector.Service.deleteSORequest inValue = new Microline.WS.Connector.Service.deleteSORequest();
            inValue.Body = new Microline.WS.Connector.Service.deleteSORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.pk = pk;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).deleteSOAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.deliverSOResponse Microline.WS.Connector.Service.MOLSoap.deliverSO(Microline.WS.Connector.Service.deliverSORequest request) {
            return base.Channel.deliverSO(request);
        }
        
        public string deliverSO(string aspServer, string customerKey, string password, string cookie, int pk) {
            Microline.WS.Connector.Service.deliverSORequest inValue = new Microline.WS.Connector.Service.deliverSORequest();
            inValue.Body = new Microline.WS.Connector.Service.deliverSORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.pk = pk;
            Microline.WS.Connector.Service.deliverSOResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).deliverSO(inValue);
            return retVal.Body.deliverSOResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.deliverSOResponse> Microline.WS.Connector.Service.MOLSoap.deliverSOAsync(Microline.WS.Connector.Service.deliverSORequest request) {
            return base.Channel.deliverSOAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.deliverSOResponse> deliverSOAsync(string aspServer, string customerKey, string password, string cookie, int pk) {
            Microline.WS.Connector.Service.deliverSORequest inValue = new Microline.WS.Connector.Service.deliverSORequest();
            inValue.Body = new Microline.WS.Connector.Service.deliverSORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.pk = pk;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).deliverSOAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.deletePOResponse Microline.WS.Connector.Service.MOLSoap.deletePO(Microline.WS.Connector.Service.deletePORequest request) {
            return base.Channel.deletePO(request);
        }
        
        public string deletePO(string aspServer, string customerKey, string password, string cookie, int pk) {
            Microline.WS.Connector.Service.deletePORequest inValue = new Microline.WS.Connector.Service.deletePORequest();
            inValue.Body = new Microline.WS.Connector.Service.deletePORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.pk = pk;
            Microline.WS.Connector.Service.deletePOResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).deletePO(inValue);
            return retVal.Body.deletePOResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.deletePOResponse> Microline.WS.Connector.Service.MOLSoap.deletePOAsync(Microline.WS.Connector.Service.deletePORequest request) {
            return base.Channel.deletePOAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.deletePOResponse> deletePOAsync(string aspServer, string customerKey, string password, string cookie, int pk) {
            Microline.WS.Connector.Service.deletePORequest inValue = new Microline.WS.Connector.Service.deletePORequest();
            inValue.Body = new Microline.WS.Connector.Service.deletePORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.pk = pk;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).deletePOAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.confirmSOResponse Microline.WS.Connector.Service.MOLSoap.confirmSO(Microline.WS.Connector.Service.confirmSORequest request) {
            return base.Channel.confirmSO(request);
        }
        
        public string confirmSO(string aspServer, string customerKey, string password, string cookie, int id) {
            Microline.WS.Connector.Service.confirmSORequest inValue = new Microline.WS.Connector.Service.confirmSORequest();
            inValue.Body = new Microline.WS.Connector.Service.confirmSORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.id = id;
            Microline.WS.Connector.Service.confirmSOResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).confirmSO(inValue);
            return retVal.Body.confirmSOResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.confirmSOResponse> Microline.WS.Connector.Service.MOLSoap.confirmSOAsync(Microline.WS.Connector.Service.confirmSORequest request) {
            return base.Channel.confirmSOAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.confirmSOResponse> confirmSOAsync(string aspServer, string customerKey, string password, string cookie, int id) {
            Microline.WS.Connector.Service.confirmSORequest inValue = new Microline.WS.Connector.Service.confirmSORequest();
            inValue.Body = new Microline.WS.Connector.Service.confirmSORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.id = id;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).confirmSOAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.addItemResponse Microline.WS.Connector.Service.MOLSoap.addItem(Microline.WS.Connector.Service.addItemRequest request) {
            return base.Channel.addItem(request);
        }
        
        public string addItem(string aspServer, string customerKey, string password, string cookie, string xml) {
            Microline.WS.Connector.Service.addItemRequest inValue = new Microline.WS.Connector.Service.addItemRequest();
            inValue.Body = new Microline.WS.Connector.Service.addItemRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.xml = xml;
            Microline.WS.Connector.Service.addItemResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).addItem(inValue);
            return retVal.Body.addItemResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.addItemResponse> Microline.WS.Connector.Service.MOLSoap.addItemAsync(Microline.WS.Connector.Service.addItemRequest request) {
            return base.Channel.addItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.addItemResponse> addItemAsync(string aspServer, string customerKey, string password, string cookie, string xml) {
            Microline.WS.Connector.Service.addItemRequest inValue = new Microline.WS.Connector.Service.addItemRequest();
            inValue.Body = new Microline.WS.Connector.Service.addItemRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.xml = xml;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).addItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.changeItemResponse Microline.WS.Connector.Service.MOLSoap.changeItem(Microline.WS.Connector.Service.changeItemRequest request) {
            return base.Channel.changeItem(request);
        }
        
        public string changeItem(string aspServer, string customerKey, string password, string cookie, string xml) {
            Microline.WS.Connector.Service.changeItemRequest inValue = new Microline.WS.Connector.Service.changeItemRequest();
            inValue.Body = new Microline.WS.Connector.Service.changeItemRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.xml = xml;
            Microline.WS.Connector.Service.changeItemResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).changeItem(inValue);
            return retVal.Body.changeItemResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.changeItemResponse> Microline.WS.Connector.Service.MOLSoap.changeItemAsync(Microline.WS.Connector.Service.changeItemRequest request) {
            return base.Channel.changeItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.changeItemResponse> changeItemAsync(string aspServer, string customerKey, string password, string cookie, string xml) {
            Microline.WS.Connector.Service.changeItemRequest inValue = new Microline.WS.Connector.Service.changeItemRequest();
            inValue.Body = new Microline.WS.Connector.Service.changeItemRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.xml = xml;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).changeItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.confirmPOResponse Microline.WS.Connector.Service.MOLSoap.confirmPO(Microline.WS.Connector.Service.confirmPORequest request) {
            return base.Channel.confirmPO(request);
        }
        
        public string confirmPO(string aspServer, string customerKey, string password, string cookie, int id) {
            Microline.WS.Connector.Service.confirmPORequest inValue = new Microline.WS.Connector.Service.confirmPORequest();
            inValue.Body = new Microline.WS.Connector.Service.confirmPORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.id = id;
            Microline.WS.Connector.Service.confirmPOResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).confirmPO(inValue);
            return retVal.Body.confirmPOResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.confirmPOResponse> Microline.WS.Connector.Service.MOLSoap.confirmPOAsync(Microline.WS.Connector.Service.confirmPORequest request) {
            return base.Channel.confirmPOAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.confirmPOResponse> confirmPOAsync(string aspServer, string customerKey, string password, string cookie, int id) {
            Microline.WS.Connector.Service.confirmPORequest inValue = new Microline.WS.Connector.Service.confirmPORequest();
            inValue.Body = new Microline.WS.Connector.Service.confirmPORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.id = id;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).confirmPOAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.addPOResponse Microline.WS.Connector.Service.MOLSoap.addPO(Microline.WS.Connector.Service.addPORequest request) {
            return base.Channel.addPO(request);
        }
        
        public string addPO(string aspServer, string customerKey, string password, string cookie, string xml) {
            Microline.WS.Connector.Service.addPORequest inValue = new Microline.WS.Connector.Service.addPORequest();
            inValue.Body = new Microline.WS.Connector.Service.addPORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.xml = xml;
            Microline.WS.Connector.Service.addPOResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).addPO(inValue);
            return retVal.Body.addPOResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.addPOResponse> Microline.WS.Connector.Service.MOLSoap.addPOAsync(Microline.WS.Connector.Service.addPORequest request) {
            return base.Channel.addPOAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.addPOResponse> addPOAsync(string aspServer, string customerKey, string password, string cookie, string xml) {
            Microline.WS.Connector.Service.addPORequest inValue = new Microline.WS.Connector.Service.addPORequest();
            inValue.Body = new Microline.WS.Connector.Service.addPORequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.xml = xml;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).addPOAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.locationContentResponse Microline.WS.Connector.Service.MOLSoap.locationContent(Microline.WS.Connector.Service.locationContentRequest request) {
            return base.Channel.locationContent(request);
        }
        
        public string locationContent(string aspServer, string customerKey, string password, string cookie, string locationKey, string itemKeyLike) {
            Microline.WS.Connector.Service.locationContentRequest inValue = new Microline.WS.Connector.Service.locationContentRequest();
            inValue.Body = new Microline.WS.Connector.Service.locationContentRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.locationKey = locationKey;
            inValue.Body.itemKeyLike = itemKeyLike;
            Microline.WS.Connector.Service.locationContentResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).locationContent(inValue);
            return retVal.Body.locationContentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.locationContentResponse> Microline.WS.Connector.Service.MOLSoap.locationContentAsync(Microline.WS.Connector.Service.locationContentRequest request) {
            return base.Channel.locationContentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.locationContentResponse> locationContentAsync(string aspServer, string customerKey, string password, string cookie, string locationKey, string itemKeyLike) {
            Microline.WS.Connector.Service.locationContentRequest inValue = new Microline.WS.Connector.Service.locationContentRequest();
            inValue.Body = new Microline.WS.Connector.Service.locationContentRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.locationKey = locationKey;
            inValue.Body.itemKeyLike = itemKeyLike;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).locationContentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.racksResponse Microline.WS.Connector.Service.MOLSoap.racks(Microline.WS.Connector.Service.racksRequest request) {
            return base.Channel.racks(request);
        }
        
        public string racks(string aspServer, string customerKey, string password, string cookie, string locationKey) {
            Microline.WS.Connector.Service.racksRequest inValue = new Microline.WS.Connector.Service.racksRequest();
            inValue.Body = new Microline.WS.Connector.Service.racksRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.locationKey = locationKey;
            Microline.WS.Connector.Service.racksResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).racks(inValue);
            return retVal.Body.racksResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.racksResponse> Microline.WS.Connector.Service.MOLSoap.racksAsync(Microline.WS.Connector.Service.racksRequest request) {
            return base.Channel.racksAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.racksResponse> racksAsync(string aspServer, string customerKey, string password, string cookie, string locationKey) {
            Microline.WS.Connector.Service.racksRequest inValue = new Microline.WS.Connector.Service.racksRequest();
            inValue.Body = new Microline.WS.Connector.Service.racksRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.locationKey = locationKey;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).racksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.salesOrdersLinesResponse Microline.WS.Connector.Service.MOLSoap.salesOrdersLines(Microline.WS.Connector.Service.salesOrdersLinesRequest request) {
            return base.Channel.salesOrdersLines(request);
        }
        
        public string salesOrdersLines(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.salesOrdersLinesRequest inValue = new Microline.WS.Connector.Service.salesOrdersLinesRequest();
            inValue.Body = new Microline.WS.Connector.Service.salesOrdersLinesRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.salesOrdersLinesResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).salesOrdersLines(inValue);
            return retVal.Body.salesOrdersLinesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesOrdersLinesResponse> Microline.WS.Connector.Service.MOLSoap.salesOrdersLinesAsync(Microline.WS.Connector.Service.salesOrdersLinesRequest request) {
            return base.Channel.salesOrdersLinesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesOrdersLinesResponse> salesOrdersLinesAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.salesOrdersLinesRequest inValue = new Microline.WS.Connector.Service.salesOrdersLinesRequest();
            inValue.Body = new Microline.WS.Connector.Service.salesOrdersLinesRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).salesOrdersLinesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.availabilityResponse Microline.WS.Connector.Service.MOLSoap.availability(Microline.WS.Connector.Service.availabilityRequest request) {
            return base.Channel.availability(request);
        }
        
        public string availability(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.availabilityRequest inValue = new Microline.WS.Connector.Service.availabilityRequest();
            inValue.Body = new Microline.WS.Connector.Service.availabilityRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.availabilityResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).availability(inValue);
            return retVal.Body.availabilityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.availabilityResponse> Microline.WS.Connector.Service.MOLSoap.availabilityAsync(Microline.WS.Connector.Service.availabilityRequest request) {
            return base.Channel.availabilityAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.availabilityResponse> availabilityAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.availabilityRequest inValue = new Microline.WS.Connector.Service.availabilityRequest();
            inValue.Body = new Microline.WS.Connector.Service.availabilityRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).availabilityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.purchaseOrdersLinesResponse Microline.WS.Connector.Service.MOLSoap.purchaseOrdersLines(Microline.WS.Connector.Service.purchaseOrdersLinesRequest request) {
            return base.Channel.purchaseOrdersLines(request);
        }
        
        public string purchaseOrdersLines(string aspServer, string customerKey, string password, string cookie, string vendorInvoiceNumberLike) {
            Microline.WS.Connector.Service.purchaseOrdersLinesRequest inValue = new Microline.WS.Connector.Service.purchaseOrdersLinesRequest();
            inValue.Body = new Microline.WS.Connector.Service.purchaseOrdersLinesRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.vendorInvoiceNumberLike = vendorInvoiceNumberLike;
            Microline.WS.Connector.Service.purchaseOrdersLinesResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).purchaseOrdersLines(inValue);
            return retVal.Body.purchaseOrdersLinesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.purchaseOrdersLinesResponse> Microline.WS.Connector.Service.MOLSoap.purchaseOrdersLinesAsync(Microline.WS.Connector.Service.purchaseOrdersLinesRequest request) {
            return base.Channel.purchaseOrdersLinesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.purchaseOrdersLinesResponse> purchaseOrdersLinesAsync(string aspServer, string customerKey, string password, string cookie, string vendorInvoiceNumberLike) {
            Microline.WS.Connector.Service.purchaseOrdersLinesRequest inValue = new Microline.WS.Connector.Service.purchaseOrdersLinesRequest();
            inValue.Body = new Microline.WS.Connector.Service.purchaseOrdersLinesRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.vendorInvoiceNumberLike = vendorInvoiceNumberLike;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).purchaseOrdersLinesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.salesOrdersResponse Microline.WS.Connector.Service.MOLSoap.salesOrders(Microline.WS.Connector.Service.salesOrdersRequest request) {
            return base.Channel.salesOrders(request);
        }
        
        public string salesOrders(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.salesOrdersRequest inValue = new Microline.WS.Connector.Service.salesOrdersRequest();
            inValue.Body = new Microline.WS.Connector.Service.salesOrdersRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            Microline.WS.Connector.Service.salesOrdersResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).salesOrders(inValue);
            return retVal.Body.salesOrdersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesOrdersResponse> Microline.WS.Connector.Service.MOLSoap.salesOrdersAsync(Microline.WS.Connector.Service.salesOrdersRequest request) {
            return base.Channel.salesOrdersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.salesOrdersResponse> salesOrdersAsync(string aspServer, string customerKey, string password, string cookie) {
            Microline.WS.Connector.Service.salesOrdersRequest inValue = new Microline.WS.Connector.Service.salesOrdersRequest();
            inValue.Body = new Microline.WS.Connector.Service.salesOrdersRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).salesOrdersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.purchaseOrdersResponse Microline.WS.Connector.Service.MOLSoap.purchaseOrders(Microline.WS.Connector.Service.purchaseOrdersRequest request) {
            return base.Channel.purchaseOrders(request);
        }
        
        public string purchaseOrders(string aspServer, string customerKey, string password, string cookie, string vendorInvoiceNumberLike) {
            Microline.WS.Connector.Service.purchaseOrdersRequest inValue = new Microline.WS.Connector.Service.purchaseOrdersRequest();
            inValue.Body = new Microline.WS.Connector.Service.purchaseOrdersRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.vendorInvoiceNumberLike = vendorInvoiceNumberLike;
            Microline.WS.Connector.Service.purchaseOrdersResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).purchaseOrders(inValue);
            return retVal.Body.purchaseOrdersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.purchaseOrdersResponse> Microline.WS.Connector.Service.MOLSoap.purchaseOrdersAsync(Microline.WS.Connector.Service.purchaseOrdersRequest request) {
            return base.Channel.purchaseOrdersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.purchaseOrdersResponse> purchaseOrdersAsync(string aspServer, string customerKey, string password, string cookie, string vendorInvoiceNumberLike) {
            Microline.WS.Connector.Service.purchaseOrdersRequest inValue = new Microline.WS.Connector.Service.purchaseOrdersRequest();
            inValue.Body = new Microline.WS.Connector.Service.purchaseOrdersRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.vendorInvoiceNumberLike = vendorInvoiceNumberLike;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).purchaseOrdersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.transactionResponse Microline.WS.Connector.Service.MOLSoap.transaction(Microline.WS.Connector.Service.transactionRequest request) {
            return base.Channel.transaction(request);
        }
        
        public string transaction(string aspServer, string customerKey, string password, string cookie, string documentNumber) {
            Microline.WS.Connector.Service.transactionRequest inValue = new Microline.WS.Connector.Service.transactionRequest();
            inValue.Body = new Microline.WS.Connector.Service.transactionRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.documentNumber = documentNumber;
            Microline.WS.Connector.Service.transactionResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).transaction(inValue);
            return retVal.Body.transactionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.transactionResponse> Microline.WS.Connector.Service.MOLSoap.transactionAsync(Microline.WS.Connector.Service.transactionRequest request) {
            return base.Channel.transactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.transactionResponse> transactionAsync(string aspServer, string customerKey, string password, string cookie, string documentNumber) {
            Microline.WS.Connector.Service.transactionRequest inValue = new Microline.WS.Connector.Service.transactionRequest();
            inValue.Body = new Microline.WS.Connector.Service.transactionRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.documentNumber = documentNumber;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).transactionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.soPKResponse Microline.WS.Connector.Service.MOLSoap.soPK(Microline.WS.Connector.Service.soPKRequest request) {
            return base.Channel.soPK(request);
        }
        
        public string soPK(string aspServer, string customerKey, string password, string cookie, string orderNumber) {
            Microline.WS.Connector.Service.soPKRequest inValue = new Microline.WS.Connector.Service.soPKRequest();
            inValue.Body = new Microline.WS.Connector.Service.soPKRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.orderNumber = orderNumber;
            Microline.WS.Connector.Service.soPKResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).soPK(inValue);
            return retVal.Body.soPKResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.soPKResponse> Microline.WS.Connector.Service.MOLSoap.soPKAsync(Microline.WS.Connector.Service.soPKRequest request) {
            return base.Channel.soPKAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.soPKResponse> soPKAsync(string aspServer, string customerKey, string password, string cookie, string orderNumber) {
            Microline.WS.Connector.Service.soPKRequest inValue = new Microline.WS.Connector.Service.soPKRequest();
            inValue.Body = new Microline.WS.Connector.Service.soPKRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.orderNumber = orderNumber;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).soPKAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.poPKResponse Microline.WS.Connector.Service.MOLSoap.poPK(Microline.WS.Connector.Service.poPKRequest request) {
            return base.Channel.poPK(request);
        }
        
        public string poPK(string aspServer, string customerKey, string password, string cookie, string orderNumber) {
            Microline.WS.Connector.Service.poPKRequest inValue = new Microline.WS.Connector.Service.poPKRequest();
            inValue.Body = new Microline.WS.Connector.Service.poPKRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.orderNumber = orderNumber;
            Microline.WS.Connector.Service.poPKResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).poPK(inValue);
            return retVal.Body.poPKResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.poPKResponse> Microline.WS.Connector.Service.MOLSoap.poPKAsync(Microline.WS.Connector.Service.poPKRequest request) {
            return base.Channel.poPKAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.poPKResponse> poPKAsync(string aspServer, string customerKey, string password, string cookie, string orderNumber) {
            Microline.WS.Connector.Service.poPKRequest inValue = new Microline.WS.Connector.Service.poPKRequest();
            inValue.Body = new Microline.WS.Connector.Service.poPKRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.orderNumber = orderNumber;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).poPKAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.soDataResponse Microline.WS.Connector.Service.MOLSoap.soData(Microline.WS.Connector.Service.soDataRequest request) {
            return base.Channel.soData(request);
        }
        
        public string soData(string aspServer, string customerKey, string password, string cookie, int pk, bool extraData) {
            Microline.WS.Connector.Service.soDataRequest inValue = new Microline.WS.Connector.Service.soDataRequest();
            inValue.Body = new Microline.WS.Connector.Service.soDataRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.pk = pk;
            inValue.Body.extraData = extraData;
            Microline.WS.Connector.Service.soDataResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).soData(inValue);
            return retVal.Body.soDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.soDataResponse> Microline.WS.Connector.Service.MOLSoap.soDataAsync(Microline.WS.Connector.Service.soDataRequest request) {
            return base.Channel.soDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.soDataResponse> soDataAsync(string aspServer, string customerKey, string password, string cookie, int pk, bool extraData) {
            Microline.WS.Connector.Service.soDataRequest inValue = new Microline.WS.Connector.Service.soDataRequest();
            inValue.Body = new Microline.WS.Connector.Service.soDataRequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.pk = pk;
            inValue.Body.extraData = extraData;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).soDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microline.WS.Connector.Service.findRMAResponse Microline.WS.Connector.Service.MOLSoap.findRMA(Microline.WS.Connector.Service.findRMARequest request) {
            return base.Channel.findRMA(request);
        }
        
        public string findRMA(string aspServer, string customerKey, string password, string cookie, string exactSerialNumber, string optionalItemKey) {
            Microline.WS.Connector.Service.findRMARequest inValue = new Microline.WS.Connector.Service.findRMARequest();
            inValue.Body = new Microline.WS.Connector.Service.findRMARequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.exactSerialNumber = exactSerialNumber;
            inValue.Body.optionalItemKey = optionalItemKey;
            Microline.WS.Connector.Service.findRMAResponse retVal = ((Microline.WS.Connector.Service.MOLSoap)(this)).findRMA(inValue);
            return retVal.Body.findRMAResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microline.WS.Connector.Service.findRMAResponse> Microline.WS.Connector.Service.MOLSoap.findRMAAsync(Microline.WS.Connector.Service.findRMARequest request) {
            return base.Channel.findRMAAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microline.WS.Connector.Service.findRMAResponse> findRMAAsync(string aspServer, string customerKey, string password, string cookie, string exactSerialNumber, string optionalItemKey) {
            Microline.WS.Connector.Service.findRMARequest inValue = new Microline.WS.Connector.Service.findRMARequest();
            inValue.Body = new Microline.WS.Connector.Service.findRMARequestBody();
            inValue.Body.aspServer = aspServer;
            inValue.Body.customerKey = customerKey;
            inValue.Body.password = password;
            inValue.Body.cookie = cookie;
            inValue.Body.exactSerialNumber = exactSerialNumber;
            inValue.Body.optionalItemKey = optionalItemKey;
            return ((Microline.WS.Connector.Service.MOLSoap)(this)).findRMAAsync(inValue);
        }
    }
}
